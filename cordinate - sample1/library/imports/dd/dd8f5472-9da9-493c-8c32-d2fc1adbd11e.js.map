{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;AAER,gBAAQ,EAAG,EAAE;AACb,gBAAQ,EAAG,EAAE;;AAGb,iBAAS,EAAG,EAAE;;AAEd,aAAK,EAAG,CAAC;;AAET,YAAI,EAAE;AACF,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;AAED,iBAAS,EAAE;AACP,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;;AAED,uBAAe,EAAG,QAAQ;;KAE7B;;AAKD,UAAM,EAAG,kBAAU;AACd,YAAG,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAC;;AAC1B,gBAAI,CAAC,UAAU,EAAE,CAAC;;AAElB,mBAAO;SACV;AACF,YAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;;AAIjC,YAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC;AAC1B,YAAI,CAAC,WAAW,GAAG,GAAG,CAAC,EAAE,CAAC;AAC1B,YAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;;;;;;AAMzF,YAAI,CAAC,IAAI,CAAC,SAAS;AACf,UAAE,CAAC,QAAQ,CAEP,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,EAAC,IAAI,CAAC;AAChD,UAAE,CAAC,MAAM,CACL,IAAI,CAAC,KAAK,IAAI,AAAC,GAAG,CAAC,EAAE,IAAI,CAAC,IAAM,GAAG,CAAC,EAAE,IAAI,CAAC,AAAC,GAAG,GAAG,GAAG,CAAC,CAAA,AAAC,GAAG,EAAE;AAC5D,UAAE,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,CAAA,AAAC,GAAC,EAAE,EAClB,CAAC,GAAG,CAAC,EAAE,GAAC,GAAG,CAAC,EAAE,CAAA,GAAE,EAAE,CACtB,EACD,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC;SAChC,CAEJ,CAAC;;;;;;;;;;;;;KAeL;;;;;;;;;;;;;;;;;;AAmBD,aAAS,EAAG,mBAAS,EAAE,EAAC,EAAE,EAAC;AACvB,YAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;KACzD;;AAED,cAAU,EAAG,sBAAU;AACnB,YAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAAC;KAC9C;;;AAID,UAAM,EAAE,kBAAY;;AAEhB,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;;AAIzC,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,KAAK,EAAC;;AAEnC,gBAAI,OAAO,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAC,IAAI,CAAC,CAAC;AACvD,mBAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;AAE3B,gBAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;;AAEjC,gBAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;;AAGpB,gBAAI,CAAC,SAAS,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,IAAI,CAAC,QAAQ,EAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAE7F,gBAAI,CAAC,MAAM,EAAE,CAAC;SACjB,EAAC,IAAI,CAAC,CAAC;KAKX;;CAOJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        \r\n        curTileX : 12,\r\n        curTileY : 42,\r\n       \r\n        \r\n        finalList : [],\r\n        \r\n        radio : 1,\r\n        \r\n        hero: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        \r\n        curTileXY: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        \r\n        curTileForeName : '当前坐标: ',\r\n\r\n    },\r\n    \r\n\r\n    \r\n    \r\n    toMove : function(){\r\n         if(this.finalList.length == 0){                    //如果走完了  \r\n             this._standHero();                             //就站着\r\n             //this.hero.getComponent('myHero').toStand();\r\n             return;\r\n         }\r\n        var dir = this.finalList.shift();                   //否则取得下一步\r\n        \r\n\r\n         \r\n        this.curTilePosX = dir.dx;                          //修改当前坐标  (这个是为寻路中断准备的 可惜没能实现)\r\n        this.curTilePosY = dir.dy;\r\n        this.curTileXY.string = this.curTileForeName + this.curTilePosX + ',' + this.curTilePosY;\r\n        //console.log(this.curTilePosX + ' ' + this.curTilePosY);\r\n        //this._moveHero(dir.dx, dir.dy);\r\n        //this.hero.getComponent('myHero').toWalk(dir.dx + '' + dir.dy);\r\n        \r\n        //Begin-----------------------_moveBackground--------------------------//\r\n        this.node.runAction(                                //开始移动吧  \r\n            cc.sequence(\r\n                \r\n                cc.callFunc(this._moveHero(dir.dx, dir.dy),this),   //角色转向下一步\r\n                cc.moveBy(\r\n                    this.radio * ((dir.dx != 0) && (dir.dy != 0) ? 1.4 : 1) / 10,  //地图向下一步移动\r\n                    -(dir.dx+dir.dy)*32, \r\n                     (dir.dy-dir.dx)*24\r\n                ),\r\n                cc.callFunc(this.toMove,this)               //然后调用自己  获取下一步\r\n            )\r\n            \r\n        );\r\n        \r\n        //this._moveBackground(dir.x,dir.y);\r\n        //End-----------------------_moveBackground----------------------------//\r\n        \r\n        //#bug1\r\n        //      cc.sequence(cc.Action(),cc.callFunc(this.hero.dir = 'dir.dx + '' + dir.dy'); !async\r\n        //      cc.sequence(cc.Action(),cc.callFunc(function,target,data)) !async\r\n        //      cc.sequence(cc.Action(),cc.callFunc(function(data),target)) !async\r\n        //      cc.sequence(cc.Action(),cc.callFunc(new function(data),target)); !async\r\n        //      cc.sequence(cc.Action(),cc.callFunc(new function,target, data)); !async\r\n        //      cc.sequence(cc.Action(),cc.callFunc(function,target);       work without args\r\n        //      cc.sequence(cc.Action(),cc.callFunc(function(function(data)),target)); work once\r\n        \r\n    \r\n    },\r\n    \r\n    \r\n    // _moveBackground : function(dx,dy){\r\n    //     this.node.runAction(\r\n    //         cc.sequence(\r\n                \r\n    //             cc.callFunc(this._moveHero(dx, dy),this),\r\n    //             cc.moveBy(\r\n    //                 this.radio * ((dx != 0) && (dy != 0) ? 1.4 : 1), \r\n    //                 -(dx+dy)*32, \r\n    //                  (dy-dx)*24\r\n    //             ),\r\n    //             cc.callFunc(this.toMove,this)\r\n    //         )\r\n            \r\n    //     );\r\n    // },\r\n\r\n    _moveHero : function(dx,dy){\r\n        this.hero.getComponent('myHero').toWalk(dx + '' + dy);\r\n    },\r\n    \r\n    _standHero : function(){\r\n        this.hero.getComponent('myHero').toStand();\r\n    },\r\n    \r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        \r\n        var self = this;\r\n        \r\n        var myUtil = self.getComponent('myUtil');  //这次我们不用require 我们用组件的方式\r\n                                                   //我们将myUtil.js扔到层级管理器的background的属性检查器中\r\n        \r\n        \r\n        this.node.on('mouseup', function(event){\r\n            \r\n            var myevent = new cc.Event.EventCustom('myClick',true); //这个是下一部分的内容\r\n            myevent.setUserData(event);\r\n            \r\n            this.node.dispatchEvent(myevent);\r\n            \r\n            self.finalList = [];                    //这个也是一个寻路中断的尝试 不过失败了\r\n                                                    \r\n                                                    //下面这句是将鼠标的点击转换成路径\r\n            self.finalList = myUtil.convertToPath(myUtil.convertTo45(event),self.curTileX,self.curTileY);\r\n            //this.toMoveOnce();\r\n            this.toMove();                          //然后移动就行了\r\n        },this);\r\n        \r\n        \r\n        \r\n        \r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n        \r\n    // },\r\n});\r\n"
  ]
}