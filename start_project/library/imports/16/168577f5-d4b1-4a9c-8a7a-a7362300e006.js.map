{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 这个属性引用了星星预制资源\r\n        starPrefab:{\r\n          default:null,\r\n          type:cc.Prefab\r\n        },\r\n         // 星星产生后消失时间的随机范围\r\n         maxStarDuration:0,\r\n         minStarDuration:0,\r\n         ground:{\r\n            default:null,\r\n            type:cc.Node\r\n         },\r\n         player:{\r\n            default:null,\r\n            type:cc.Node\r\n         },\r\n         scoreDisplay:{\r\n            default:null,\r\n            type:cc.Label\r\n         },\r\n         scoreAudio:{\r\n            default:null,\r\n            url:cc.AudioClip\r\n         },\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.groundY = this.ground.y + this.ground.height/2;\r\n        \r\n        \r\n        //初始化计时器\r\n        this.timer = 0;\r\n        this.starDuration = 0;\r\n        \r\n        //生成一个星星\r\n        this.spawnNewStar();\r\n        //初始化计分\r\n        this.score = 0;\r\n        \r\n    },\r\n    \r\n    spawnNewStar:function(){\r\n        // 使用给定的模板在场景中生成一个新节点\r\n        var newStar = cc.instantiate(this.starPrefab);\r\n         // 将新增的节点添加到 Canvas 节点下面\r\n         this.node.addChild(newStar);\r\n         // 为星星设置一个随机位置\r\n         newStar.setPosition(this.getNewStarPositon());\r\n         \r\n         //将game组件的实例传入星星组件\r\n         newStar.getComponent('Star').game = this;\r\n         \r\n         //重置计时器，根据消失时间范围随机取一个值\r\n         this.starDuration = this.minStarDuration + cc.random0To1()*(this.maxStarDuration-this.minStarDuration);\r\n         this.timer = 0;\r\n    },\r\n    \r\n    getNewStarPositon:function(){\r\n        var randX = 0;\r\n        // 根据地平面位置和主角跳跃高度，随机得到一个星星的 y 坐标\r\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('Player').jumpHeight +50;\r\n        // 根据屏幕宽度，随机得到一个星星 x 坐标\r\n        var maxX = this.node.width/2;\r\n        randX = cc.randomMinus1To1() * maxX;\r\n        return cc.p(randX,randY);\r\n    },\r\n    \r\n    gainScore:function(){\r\n        this.score += 1;\r\n        this.scoreDisplay.string = 'Score:' + this.score.toString();\r\n        //播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio,false);\r\n    },\r\n    \r\n    gameOver:function(){\r\n        this.player.stopAllActions();  //停止player节点的跳跃动作\r\n        cc.director.loadScene('game');\r\n    },\r\n    \r\n    update:function(dt){\r\n        //每帧更新计时器，超过限度还没有生成新的星星\r\n        //就调用游戏失败逻辑\r\n        if(this.timer>this.starDuration){\r\n            this.gameOver();\r\n            return;\r\n        }\r\n        this.timer += dt;\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}